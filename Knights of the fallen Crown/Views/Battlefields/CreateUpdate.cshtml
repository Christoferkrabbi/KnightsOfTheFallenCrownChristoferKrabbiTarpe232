﻿@using KnightsOfTheFallenCrown.Core.Domain
@model KnightsOfTheFallenCrown.Models.Battlefields.BattlefieldCreateUpdateViewModel
    
@{
    ViewData["Title"] = Model.ID.HasValue ? "Edit Battlefield" : "Find a New Battlefield";
}

<div class="gTZRG">
    @if (Model.ID.HasValue)
    {
        <h1 class="gTZRG">Edit Battlefield</h1>
    }
    else
    {
        <h1 class="gTZRG">Find a New Battlefield</h1>
    }
    
    <form method="post" enctype="multipart/form-data">
        <input asp-for="ID" type="hidden" />
        <input asp-for="CreatedAt" type="hidden" />
        <input asp-for="ModifiedAt" type="hidden" />

        <div class="form-group-row">
            <label asp-for="BattlefieldName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="BattlefieldName" class="form-control" />
            </div>
        </div>

        <div class="form-group-row">
            <label asp-for="BattlefieldDescription" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <textarea asp-for="BattlefieldDescription" class="form-control" rows="3"></textarea>
            </div>
        </div>

        <div class="form-group-row">
            <label asp-for="EnvironmentBoost" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <select asp-for="EnvironmentBoost" asp-items="Html.GetEnumSelectList<KnightTYPE>()" class="form-control">
                    <option value="">Select environmental boost</option>
                </select>
                <span asp-validation-for="EnvironmentBoost" class="galacticErrorMessageColor"></span>
            </div>
        </div>

        <div class="form-group-row">
            <label asp-for="BattlefieldType" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <select asp-for="BattlefieldType" asp-items="Html.GetEnumSelectList<BattlefieldType>()" class="form-control" id="battlefieldTypeSelect">
                    <option value="">Select type of battlefield</option>
                </select>
                <span asp-validation-for="BattlefieldType" class="galacticErrorMessageColor"></span>
            </div>
        </div>

        <!-- Image Preview Section -->
        <div class="form-group-row">
            <label class="col-sm-2 col-form-label">Preview</label>
            <div class="col-sm-10">
                <div class="card" style="width: 100%; max-width: 500px;">
                    <img id="battlefieldImagePreview" src="" class="card-img-top" alt="Battlefield preview" style="display: none;">
                    <div class="card-body">
                        <p class="card-text" id="battlefieldDescriptionText">Select a battlefield type to see preview</p>
                    </div>
                </div>
            </div>
        </div>

              

       @*  <div class="form-group-row">
            <label asp-for="Files" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-5">
                <div class="custom-file">
                    <input class="form-control custom-file-input"
                           asp-for="Files"
                           multiple type="file" />
                    <label class="custom-file-label">Choose Images from device -></label>
                </div>
            </div>

        </div> *@
                <!-- Image Preview Section -->
                <div class="form-group-row">
                    <label class="col-sm-2 col-form-label">Preview</label>
                    <div class="col-sm-10">
                        <div class="card" style="width: 100%; max-width: 500px;">
                            <img id="battlefieldImagePreview" src="" class="card-img-top" alt="Battlefield preview" style="display: none;">
                            <div class="card-body">
                                <p class="card-text" id="battlefieldDescriptionText">Select a battlefield type to see preview</p>
                            </div>
                        </div>
                    </div>
                </div>

        @if (Model.ID.HasValue)
        {
            <input asp-action="Update"
                   asp-controller="Battlefields"
                   type="submit"
                   class="btn btn-primary"
                   value="Save Changes" />
        }
        else
        {
            <input asp-action="Create"
                   asp-controller="Battlefields"
                   type="submit"
                   class="btn btn-primary"
                   value="Make this Battlefield" />
        }

        <a asp-action="index" class="btn btn-primary">Cancel</a>

    </form>
</div>


@* @section Scripts {
    <script>
        $(document).ready(function () {
            $('.custom-file-input').on("change", function () {
                var fileLabel = $(this).next('.custom-file-input');
                var files = $(this)[0].files;
                if (files.length > 1) {
                    fileLabel.html(files.length + ' files selected');
                }
                else if (files.length == 1) {
                    fileLabel.html(files[0].name);
                }
            });
        });
    </script>
} *@

<div class="form-group">
    <img id="battlefieldImagePreview" src="" alt="Battlefield preview"
         style="max-width: 500px; display: none;" class="img-fluid mt-2" />
</div>

        @section Scripts {
            <script>
                // Mapping of BattlefieldType to image paths
                const battlefieldImages = {
                    'Open_Plains': '/Images/Battlefields/OpenPlains.jpg',
                    'Castle_Siege': '/Images/Battlefields/CastleSiege.jpg',
                    'Village_Skirmish': '/Images/Battlefields/VillageSkirmish.jpg',
                    'Bridge_Battle': '/Images/Battlefields/BridgeBattle.jpg',
                    'Cursed_Graveyard': '/Images/Battlefields/CursedGraveyard.jpg',
                    'Haunted_Ruins': '/Images/Battlefields/HauntedRuins.jpg',
                    'Enchanted_Forest': '/Images/Battlefields/EnchantedForest.jpg',
                    'Shadow_Realm': '/Images/Battlefields/ShadowRealm.jpg',
                    'Frozen_Tundra': '/Images/Battlefields/FrozenTundra.jpg',
                    'Stormy_Cliffs': '/Images/Battlefields/StormyCliff.jpg',
                    'Wrecked_Battlefield': '/Images/Battlefields/WreckedBattlefield.jpg',
                    'Nomad_Camp_Raid': '/Images/Battlefields/NomadCampRaid.jpg',
                    'Underground_Catacombs': '/Images/Battlefields/UndergroundCatacombs.jpg',
                    'Sky_Citadel': '/Images/Battlefields/SkyCitadel.jpg'
                };

                // Descriptions for each battlefield type
                const battlefieldDescriptions = {
                    'Open_Plains': 'Vast open fields ideal for cavalry charges and large-scale battles.',
                    'Castle_Siege': 'Fortified castle walls with defensive positions and siege opportunities.',
                    'Village_Skirmish': 'Tight village streets perfect for ambushes and close-quarters combat.',
                    'Bridge_Battle': 'Strategic bridge crossing with limited approach options.',
                    'Cursed_Graveyard': 'Haunted burial grounds with supernatural hazards.',
                    'Haunted_Ruins': 'Ancient ruins with lingering dark magic.',
                    'Enchanted_Forest': 'Magical woodland with unpredictable environmental effects.',
                    'Shadow_Realm': 'Twisted dimension where normal physics don\'t apply.',
                    'Frozen_Tundra': 'Icy wasteland that slows movement and numbs the senses.',
                    'Stormy_Cliffs': 'High cliffs battered by relentless winds and rain.',
                    'Wrecked_Battlefield': 'Scarred landscape littered with remnants of past battles.',
                    'Nomad_Camp_Raid': 'Temporary settlement with mobile defenses.',
                    'Underground_Catacombs': 'Dark tunnels with limited visibility and tight spaces.',
                    'Sky_Citadel': 'Floating fortress with deadly drops and altitude effects.'
                };

                document.getElementById('battlefieldTypeSelect').addEventListener('change', function() {
                    const selectedValue = this.value;
                    const preview = document.getElementById('battlefieldImagePreview');
                    const description = document.getElementById('battlefieldDescriptionText');

                    if (selectedValue && battlefieldImages[selectedValue]) {
                        preview.src = battlefieldImages[selectedValue];
                        preview.style.display = 'block';
                        description.textContent = battlefieldDescriptions[selectedValue] || 'No description available.';
                    } else {
                        preview.style.display = 'none';
                        description.textContent = 'Select a battlefield type to see preview';
                    }
                });

                // Initialize preview if editing an existing battlefield
                @if (Model.BattlefieldType != null)
                {
                    <text>
                        document.addEventListener('DOMContentLoaded', function() {
                            const initialType = '@Model.BattlefieldType.ToString()';
                            if (initialType && battlefieldImages[initialType]) {
                                document.getElementById('battlefieldImagePreview').src = battlefieldImages[initialType];
                                document.getElementById('battlefieldImagePreview').style.display = 'block';
                                document.getElementById('battlefieldDescriptionText').textContent =
                                    battlefieldDescriptions[initialType] || 'No description available.';
                            }
                        });
                    </text>
                }
            </script>
        }
